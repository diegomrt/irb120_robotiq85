<launch>

<!-- PARTE 1: LANZAR MUNDO VACÍO EN GAZEBO + IRB 120 + TF + CONTROL INTERFACE -->
  <arg name="paused" default="false" doc="Start gazebo in paused mode" />

  <!-- remap topics to conform to ROS-I specifications -->
  <remap from="/arm_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
  <remap from="/arm_controller/state" to="/feedback_states" />
  <remap from="/arm_controller/command" to="/joint_path_command"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <arg name="gui" value="true"/>
    <arg name="paused" value="$(arg paused)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <include file="$(find abb_irb120_gazebo)/launch/load_irb120_3_58.launch" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="abb_irb120_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model abb_irb120_3_58" />

    <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  output="screen">
  </node>

  <!-- init and start Gazebo ros_control interface -->
  <include file="$(find abb_irb120_gazebo)/launch/irb120_3_58_control.launch"/>

<!-- PARTE 2: LANZAR CAMARA KINECT en GAZEBO -->

  <!-- Lanzar Kinect en una posición y orientación fija -->
    <arg name="robot_name" default="kinect" />
    <arg name="x" default="1.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="1.0" />
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0.5"/>
    <arg name="yaw" default="3.14159" />
    <arg name="sdf_robot_file" value="$(find irb120_camara_diego)/kinect/model.sdf" />
    

    <node name="$(arg robot_name)_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-file $(arg sdf_robot_file) -sdf -x $(arg x) -y $(arg y) -z $(arg z)  -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg robot_name)"/>


</launch>
